       IDENTIFICATION DIVISION.
       PROGRAM-ID.
              CUSTOMER-FILE.
      *DESCRIPTION.
      *Maintain a file containing customer data,
      *process charges, and payments.
       AUTHOR.
             LEE HOLT.
      *CREATED FEB,08 2012.
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
          SELECT CUSTOMER-DATA
                 ASSIGN TO "S:\COBOL\BETTERCUSTOMER\PROG1S.CBD".
          SELECT CUSTOMER-OUT
                 ASSIGN TO "S:\COBOL\BETTERCUSTOMER\TEMP.CBD".

       DATA DIVISION.
       FILE SECTION.
       FD CUSTOMER-DATA.
       01 CUSTOMER-REC.
           05  CUS-ID      PIC 9(9).
           05  CUS-NAME    PIC X(30).
           05  CUS-LIMIT   PIC 9(11).
           05  CUS-BAL     PIC 9(11).

       FD CUSTOMER-OUT.
       01 ALL-OUT          PIC X(63).

       WORKING-STORAGE SECTION.
       01 W-EOF            PIC X VALUE 'N'.
           88 EOF          VALUE 'Y'.
           88 NOT-EOF      VALUE 'N'.

       01 NEW-CUSTOMER.
           05  NEW-ID      PIC 9(9).
           05  NEW-NAME    PIC X(30).
           05  NEW-LIMIT   PIC 9(11).
           05  NEW-BAL     PIC 9(11).

       01 UBER-QUESTION.
           05 UBER-WORDS   PIC X(36)
               VALUE "What is the ID of the customer?".

       01 UBER-ANSWER      PIC 9(9).

       01 UBER-ANSWER2     PIC X(5).

       01 W-LENGTH         PIC 9(7).

       01 NOT-FOUND        PIC X VALUE 'N'.
           88 FOUND        VALUE 'Y'.

       01 ADDED-BALANCE    PIC 9(11).
       01 SUBTRACTED-BALANCE PIC 9(11).

       01 ADDING-CUSTOMER  PIC X(63).

       01 YESORNO          PIC X.

       01 ITS-FINISHED     PIC X VALUE 'N'.
           88 NOT-DONE     VALUE 'N'.
           88 ITS-DONE     VALUE 'Y'.
      
      LINKAGE SECTION.
       01 CUS-ID	PIC 999.
       01 RELAKEY	PIC 9(9).
       01 W-POS		PIC 999.
            
       CALL INVERSION USING CUS-ID, RELAKEY, W-POS.       
       PROCEDURE DIVISION USING CUS-ID, RELAKEY, W-POS.
       MAIN-PARAGRAPH.
       OPEN  INPUT  CUSTOMER-DATA,
             OUTPUT CUSTOMER-OUT.
       CALL INVERSION USING 
       PERFORM FIRST-TASK.
       PERFORM SECOND-TASK UNTIL ITS-DONE.

       CLOSE CUSTOMER-DATA,
             CUSTOMER-OUT.

       STOP RUN.



       SUPPORTING-SUBROUTINES SECTION.

       FIRST-TASK.
           DISPLAY UBER-QUESTION.
           ACCEPT UBER-ANSWER.
           READ CUSTOMER-DATA.
           MOVE UBER-ANSWER TO NEW-ID.


       SECOND-TASK.

           IF CUS-ID = NEW-ID DISPLAY "CUSTOMER FOUND",
               PERFORM UBER-QUESTION2
           ELSE READ CUSTOMER-DATA, AT END
               PERFORM UBER-QUESTION3 UNTIL YESORNO = 'N'.


       UBER-QUESTION2.
       DISPLAY "WHAT WOULD YOU LIKE TO DO WITH CUSTOMER BALANCE?".
       DISPLAY "ADD OR DEBIT?".
       ACCEPT UBER-ANSWER2.
           IF UBER-ANSWER2 = "ADD"
               DISPLAY "HOW MUCH ARE WE ADDING TODAY?"
               ACCEPT ADDED-BALANCE
               MOVE CUSTOMER-REC TO NEW-CUSTOMER
               ADD ADDED-BALANCE TO NEW-BAL
               PERFORM NEW-ADDS
           ELSE IF UBER-ANSWER2 = "DEBIT"
               DISPLAY "HOW MUCH ARE WE SUBTRACTING TODAY?"
               ACCEPT SUBTRACTED-BALANCE
               MOVE CUSTOMER-REC TO NEW-CUSTOMER
               SUBTRACT SUBTRACTED-BALANCE FROM NEW-BAL
               MOVE NEW-CUSTOMER TO ADDING-CUSTOMER
               WRITE ALL-OUT FROM ADDING-CUSTOMER
           ELSE DISPLAY "ONLY ALLOWED TO USE TERMS ADD OR DEBIT".


       UBER-QUESTION3.
       DISPLAY "WOULD YOU LIKE TO CREATE A NEW CUSTOMER?"
       DISPLAY "Y OR N?".
       ACCEPT YESORNO.
           IF YESORNO = 'Y'
              PERFORM ADD-TASK
           ELSE IF YESORNO = 'N'
               DISPLAY "THEN GOODBYE TO YOU SIR."
               SET ITS-DONE TO TRUE
           ELSE DISPLAY "ONLY Y OR N WILL DO.".

       ADD-TASK.
       DISPLAY "PLEASE ENTER CUSTOMER ID".
       ACCEPT NEW-ID.
       DISPLAY 'ENTER CUSTOMERS NAME'.
       ACCEPT NEW-NAME.
       DISPLAY 'SET THE CUSTOMERS CREDIT LIMIT'.
       ACCEPT NEW-LIMIT.
       DISPLAY 'SUPPLY THE CURRENT BANK BALANCE'.
       ACCEPT NEW-BAL.
       DISPLAY 'NOW THE MAGIC HAPPENS,,,PLEASE WAIT'.

       CLOSE CUSTOMER-DATA.
       OPEN INPUT CUSTOMER-DATA.
       SET NOT-EOF TO TRUE.
       READ CUSTOMER-DATA.
       PERFORM NEW-ADDS UNTIL EOF.

       NEW-ADDS.
           IF CUS-ID < NEW-ID
               MOVE CUSTOMER-REC TO ADDING-CUSTOMER
               WRITE ALL-OUT FROM ADDING-CUSTOMER
           ELSE IF CUS-ID > NEW-ID
               MOVE NEW-CUSTOMER TO ADDING-CUSTOMER
               WRITE ALL-OUT FROM ADDING-CUSTOMER
               PERFORM FINISH-JOB.

       READ CUSTOMER-DATA, AT END SET EOF TO TRUE.

       WASH-DISHES.
       CLOSE CUSTOMER-DATA,
               CUSTOMER-OUT.

       OPEN INPUT CUSTOMER-OUT,
            OUTPUT CUSTOMER-DATA.
       SET NOT-EOF TO TRUE.
       READ CUSTOMER-OUT.
       PERFORM FINISH-JOB2 UNTIL EOF.


       CLOSE CUSTOMER-DATA,
             CUSTOMER-OUT.

       OPEN INPUT CUSTOMER-DATA,
            OUTPUT CUSTOMER-OUT.

       FINISH-JOB.
               MOVE CUSTOMER-REC TO ADDING-CUSTOMER.
               DISPLAY ADDING-CUSTOMER.
               WRITE ALL-OUT FROM ADDING-CUSTOMER.
               READ CUSTOMER-DATA, AT END SET EOF TO TRUE.

       FINISH-JOB2.
               MOVE ALL-OUT TO ADDING-CUSTOMER.
               WRITE CUSTOMER-REC FROM ADDING-CUSTOMER.
               READ CUSTOMER-OUT, AT END SET EOF TO TRUE.

